From: David Faure <faure@kde.org>
Origin: commit: 73ea8cee7661579d3c414f510f6a74fc241c3ecf
Description: Fix copying of files with extended ACLs.
 The switch to #cmakedefine01 in KDE Frameworks has detected a missing
 #include <config-acl.h> in file_unix.cpp ever since it was splitted
 out. In case we still had a doubt about how much more superior the
 cmakedefine01 (#if instead of #ifdef) solution is...

 CCBUG: 191474
  (not tested, but might help...)
---
 kioslave/file/file.cpp |   11 ++---------
 kioslave/file/file.h   |   10 ++++++++++
 2 files changed, 12 insertions(+), 9 deletions(-)

diff --git a/kioslave/file/file.cpp b/kioslave/file/file.cpp
index 500f07c..f3a6448 100644
--- a/kioslave/file/file.cpp
+++ b/kioslave/file/file.cpp
@@ -28,7 +28,6 @@
 #include <QDirIterator>
 
 #include <config.h>
-#include <config-acl.h>
 #include <config-kioslave-file.h>
 
 
@@ -40,11 +39,6 @@
 #include <sys/time.h>
 #endif
 
-#ifdef HAVE_POSIX_ACL
-#include <sys/acl.h>
-#include <acl/libacl.h>
-#endif
-
 #include <assert.h>
 #include <dirent.h>
 #include <errno.h>
@@ -101,7 +95,6 @@ using namespace KIO;
 
 static QString testLogFile( const QByteArray&_filename );
 #ifdef HAVE_POSIX_ACL
-static bool isExtendedACL(  acl_t p_acl );
 static void appendACLAtoms( const QByteArray & path, UDSEntry& entry,
                             mode_t type, bool withACL );
 #endif
@@ -1279,7 +1272,7 @@ static QString testLogFile( const QByteArray& _filename )
  *************************************/
 #ifdef HAVE_POSIX_ACL
 
-static bool isExtendedACL( acl_t acl )
+bool FileProtocol::isExtendedACL( acl_t acl )
 {
     return ( acl_equiv_mode( acl, 0 ) != 0 );
 }
@@ -1298,7 +1291,7 @@ static void appendACLAtoms( const QByteArray & path, UDSEntry& entry, mode_t typ
      * ACL separately. Since a directory can have both, we need to check again. */
     if ( isDir ) {
         if ( acl ) {
-            if ( !isExtendedACL( acl ) ) {
+            if ( !FileProtocol::isExtendedACL( acl ) ) {
                 acl_free( acl );
                 acl = 0;
             }
diff --git a/kioslave/file/file.h b/kioslave/file/file.h
index 98d64ca..79768ea 100644
--- a/kioslave/file/file.h
+++ b/kioslave/file/file.h
@@ -30,6 +30,12 @@
 #include <QtCore/QObject>
 #include <QtCore/QHash>
 
+#include <config-acl.h>
+
+#ifdef HAVE_POSIX_ACL
+#include <sys/acl.h>
+#include <acl/libacl.h>
+#endif
 
 #include <sys/types.h>
 #include <sys/stat.h>
@@ -78,6 +84,10 @@ public:
   bool pumount( const QString &point );
   bool pmount( const QString &dev );
 
+#ifdef HAVE_POSIX_ACL
+  static bool isExtendedACL(acl_t acl);
+#endif
+
 private:
   bool createUDSEntry( const QString & filename, const QByteArray & path, KIO::UDSEntry & entry,
                        short int details, bool withACL );
-- 
1.7.10.4

