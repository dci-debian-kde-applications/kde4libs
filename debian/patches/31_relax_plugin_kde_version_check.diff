Description: relax KDE version check when loading plugins
 This patch removes the check that kdecore runtime version must be higher or
 equal to the version a KDE plugin has been compiled against. It does not make
 much sense since Debian enforces dependencies on the symbol level and kde4libs
 guarantees binary compatibility.
 .
 The worst about this check was that it made impossible for most KDE packages
 to migrate to testing before newer kde4libs even if they did not need symbols
 from it. See the bug report for more information about breakage it once caused
 in testing.
 .
 This patch also removes similar "later" version check in libplasma.
Author: Modestas Vainius <modestas@vainius.eu>
Bug-Debian: http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=585792
Forwarded: not-needed
Origin: vendor
Last-Update: 2010-06-22

Index: kde4libs/kdecore/util/kpluginloader.cpp
===================================================================
--- kde4libs.orig/kdecore/util/kpluginloader.cpp	2010-11-25 16:30:54.000000000 +0100
+++ kde4libs/kdecore/util/kpluginloader.cpp	2010-11-25 16:40:15.000000000 +0100
@@ -244,7 +244,6 @@
     d->verificationData = (KDEPluginVerificationData *) lib.resolve("kde_plugin_verification_data");
     if (d->verificationData) {
         if (d->verificationData->dataVersion < KDEPluginVerificationData::PluginVerificationDataVersion
-            || (d->verificationData->KDEVersion > KDE_VERSION)
             || (KDE_VERSION_MAJOR << 16 != (d->verificationData->KDEVersion & 0xFF0000)))
         {
             d->errorString = i18n("The plugin '%1' uses an incompatible KDE library (%2).", d->name, QString::fromLatin1(d->verificationData->KDEVersionString));
Index: kde4libs/plasma/version.cpp
===================================================================
--- kde4libs.orig/plasma/version.cpp	2010-08-11 12:08:49.000000000 +0200
+++ kde4libs/plasma/version.cpp	2010-11-25 16:40:15.000000000 +0100
@@ -58,12 +58,11 @@
 
     // we require PLASMA_VERSION_MAJOR and PLASMA_VERSION_MINOR
     const quint32 minVersion = PLASMA_MAKE_VERSION(PLASMA_VERSION_MAJOR, 0, 0);
-    const quint32 maxVersion = PLASMA_MAKE_VERSION(PLASMA_VERSION_MAJOR, PLASMA_VERSION_MINOR, 60);
 
-    if (version < minVersion || version > maxVersion) {
+    if (version < minVersion) {
         kDebug() << "plugin is compiled against incompatible Plasma version  " << version
                  << "This build is compatible with" << PLASMA_VERSION_MAJOR << ".0.0 (" << minVersion
-                 << ") to" << PLASMA_VERSION_STRING << "(" << maxVersion << ")";
+                 << ")";
         return false;
     }
 
