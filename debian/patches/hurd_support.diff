Author: Pino Toscano <pino@debian.org>
Description: preliminary GNU/Hurd support
 Adds "support" for GNU/Hurd by defining MAXPATHLEN and PATH_MAX where needed.
 Not forwarded, better fixes should be done upstream.
 Also disable the fatal warnings for the linker, as we might hit symbols
 which are not implemented and will always fail.
Forwarded: no
Last-Update: 2012-10-01
Index: kde4libs/kdecore/kernel/kstandarddirs.cpp
===================================================================
--- kde4libs.orig/kdecore/kernel/kstandarddirs.cpp	2015-09-19 02:00:41.172335952 +0200
+++ kde4libs/kdecore/kernel/kstandarddirs.cpp	2015-09-19 02:00:41.168336114 +0200
@@ -79,6 +79,10 @@
 static Qt::CaseSensitivity cs = Qt::CaseSensitive;
 #endif
 
+#ifndef MAXPATHLEN
+# define MAXPATHLEN 1024
+#endif
+
 class KStandardDirs::KStandardDirsPrivate
 {
 public:
Index: kde4libs/kinit/lnusertemp.c
===================================================================
--- kde4libs.orig/kinit/lnusertemp.c	2015-09-19 02:00:41.172335952 +0200
+++ kde4libs/kinit/lnusertemp.c	2015-09-19 02:00:41.168336114 +0200
@@ -36,6 +36,10 @@
 #include <limits.h>
 #endif
 
+#ifndef PATH_MAX
+# define PATH_MAX 1024
+#endif
+
 int check_tmp_dir(const char *tmp_dir, int check_ownership);
 int create_link(const char *file, const char *tmp_dir);
 int build_link(const char* tmp, const char *tmp_prefix, const char *kde_prefix);
Index: kde4libs/cmake/modules/FindKDE4Internal.cmake
===================================================================
--- kde4libs.orig/cmake/modules/FindKDE4Internal.cmake	2015-09-19 02:00:41.172335952 +0200
+++ kde4libs/cmake/modules/FindKDE4Internal.cmake	2015-09-19 02:00:41.168336114 +0200
@@ -1192,8 +1192,8 @@
     endif (CMAKE_SYSTEM_NAME MATCHES Linux OR CMAKE_SYSTEM_NAME STREQUAL GNU OR CMAKE_SYSTEM_NAME MATCHES kFreeBSD)
 
    if (CMAKE_SYSTEM_NAME STREQUAL GNU)
-      set (CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -pthread")
-      set (CMAKE_MODULE_LINKER_FLAGS "${CMAKE_MODULE_LINKER_FLAGS} -pthread")
+      set (CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -pthread -Wl,--no-fatal-warnings")
+      set (CMAKE_MODULE_LINKER_FLAGS "${CMAKE_MODULE_LINKER_FLAGS} -pthread -Wl,--no-fatal-warnings")
    endif (CMAKE_SYSTEM_NAME STREQUAL GNU)
 
    # gcc under Windows
